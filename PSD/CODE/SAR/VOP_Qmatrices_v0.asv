%% This script describes the implementation of the VOP paper by Eichfelder
clear all;
load('Qavg_df.mat');
% matlabpool local 2;
[M,N,P,~,~]=size(Qavg_df);
Qavg_df = reshape(Qavg_df,[M*N*P,8,8]);
myu_def=0.1360*3.1; %1% of norm(Bstar,2)

%% Reduce data size - verify
S = Qavg_df>0;
ind = find(squeeze(S(:,4,4)));
Qind = squeeze(Qavg_df(ind,:,:));
obs_pts = length(ind);
cluster=zeros(1,100); %preallocating for speed.
vop_map = zeros(M*N*P,1);

indr = 1:le

%% Clustering process
VOP=0;label=0;
while(obs_pts > 0)
    VOP = VOP+1;
    disp(VOP);
    %% Selection of core matrix
    Qind = squeeze(Qavg_df(ind,:,:));
    [Bstar,ind_sorta,myu_def] = get_coremat(Qind,ind);
    A = Bstar;
    ind_sort = squeeze(ind_sorta(2:end));
    
    %% Set-up problem to find Z*
    
    l=2;e=0;Z=zeros(8); 
    cluster_done=0;
    while (cluster_done==0)
        Q = A - squeeze(Qind(ind_sort(1),:,:));
        [V,E] = eig(Q);
        Ep = E;
        Ep(Ep<0)=0;
        Em = Ep - E;
        Z = V*Em*V';                %Qm = V*E-*V';
        myu_calc = norm(Z,2);
        disp(myu_calc);
                 if(myu_calc > myu_def)
                     cluster_done=1;
                     label=label+1;
                     ind=squeeze(setdiff(ind, (squeeze(ind_sorta(1:l-1)))));
                     vop_map(ind(squeeze(ind_sorta(1:l-1))))=label;
                     cluster(VOP)=l-1;
                     %e = min(eig(A - squeeze(Qind(ind_sorta(l-1),:,:))));
                 else
                    A = A + Z;
                    obs_pts = obs_pts -1;
                    switch obs_pts
                        case 1
                        ind_sort = (ind_sort);
                        case 0
                            break;
                        otherwise
                        ind_sort = squeeze(ind_sort(2:end));
                    end
                    l=l+1;
                    if(mod(l,1000)==0)
                        disp(l);
                    end
                 end

     end
    
    
end

VOP_map = reshape(vop_map,[M,N,P]);
